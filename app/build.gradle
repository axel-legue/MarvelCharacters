plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.fairjungle.companion"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "androidx.core:core-ktx:$versions.coreKtx"
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"
    implementation "androidx.legacy:legacy-support-v4:$versions.legacy"

    // Extension
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleExtension"

    //LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.liveData"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.viewModel"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.viewModel"

    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi")

    //Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    //Timber
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"

    //OkHttp
    // define a BOM and its version
    implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

    //Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    //Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$versions.room"

    //Test
    //Local test for test package
    testImplementation "junit:junit:$versions.junitTest"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$versions.room"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"

    //Instrumented test for androidTest package
    androidTestImplementation "androidx.test.ext:junit:$versions.junitAndroidTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCoreAndroidTest"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$versions.navigation"
}